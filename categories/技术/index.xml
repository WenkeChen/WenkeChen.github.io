<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>技术 on wenkechen</title>
    <link>https://wenkechen.github.io/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on wenkechen</description>
    <image>
      <url>https://wenkechen.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wenkechen.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Feb 2022 17:47:05 +0800</lastBuildDate><atom:link href="https://wenkechen.github.io/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL删除重复记录的几种方法</title>
      <link>https://wenkechen.github.io/posts/mysql%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BD%95%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 10 Feb 2022 17:47:05 +0800</pubDate>
      
      <guid>https://wenkechen.github.io/posts/mysql%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BD%95%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>问题 这里有这么一张学生信息表，表结构如下：
CREATE TABLE `students` (  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,  `name` varchar(30) NOT NULL,  `gender` tinyint(1) UNSIGNED NOT NULL,  `age` int UNSIGNED NOT NULL,  PRIMARY KEY (`id`) ); 现name,gender,age三个字段均相同，则可认定这是同一个学生；但是由于表没有加联合唯一索引，所以表里面有很多重复的记录，怎么样使相同的记录只保留一条？
解答 若是查询，我们大可用group by然后having count或者distinct来合并查询一条，但是删除好似没有这样方便的语句。所以总结了一些比较好的方法：
创建联合唯一索引 这是最简单方便的一条了
ALTER IGNORE TABLE students ADD UNIQUE INDEX idx_name_gender_age (name, gender, age); 注意这个IGNORE，由于表里面已经有重复记录了，所以直接创建会出现错误。执行之后，所有的重复记录都会被自动删除（只保留一条），而且以后也无法插入重复记录了。
自关联 如果你没有修改数据库结构的权限，那下面这条肯定适合你
DELETE `a` FROM  `students` AS `a`,  `students` AS `b` WHERE  -- IMPORTANT: Ensures one version remains  -- Change &amp;#34;ID&amp;#34; to your unique column&amp;#39;s name  `a`.</description>
    </item>
    
    <item>
      <title>关于CSRF与表单重复提交</title>
      <link>https://wenkechen.github.io/posts/%E5%85%B3%E4%BA%8Ecsrf%E4%B8%8E%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4/</link>
      <pubDate>Wed, 09 Feb 2022 15:50:59 +0800</pubDate>
      
      <guid>https://wenkechen.github.io/posts/%E5%85%B3%E4%BA%8Ecsrf%E4%B8%8E%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4/</guid>
      <description>跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。
 问题 抵御跨站请求伪造和表单重复提交最有效的手段都是在表单中加一个token，那么CSRF的token能用于防御表单重复提交吗？
求证 扒了一下symfony关于CSRF token的生成源码。
通过tokenId获取token
public function getCsrfToken(string $tokenId): string {  return $this-&amp;gt;csrfTokenManager-&amp;gt;getToken($tokenId)-&amp;gt;getValue(); } 如果存储中存在对应的token就直接拿，否则创建
public function getToken($tokenId) {  $namespacedId = $this-&amp;gt;getNamespace().$tokenId;  if ($this-&amp;gt;storage-&amp;gt;hasToken($namespacedId)) {  $value = $this-&amp;gt;storage-&amp;gt;getToken($namespacedId);  } else {  $value = $this-&amp;gt;generator-&amp;gt;generateToken();   $this-&amp;gt;storage-&amp;gt;setToken($namespacedId, $value);  }   return new CsrfToken($tokenId, $value); } 真正的生成的方法</description>
    </item>
    
  </channel>
</rss>
